// <auto-generated />
using System;
using Infrastructure.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.AppointmentPlace", b =>
                {
                    b.Property<long>("AppointmentPlaceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AppointmentPlaceID"));

                    b.Property<string>("PlaceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentPlaceID");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Core.Entities.BillingDetails", b =>
                {
                    b.Property<long>("ReceiptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReceiptID"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("AppointmentPlaceID")
                        .HasColumnType("bigint");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<long?>("TransactionHistoryID")
                        .HasColumnType("bigint");

                    b.HasKey("ReceiptID");

                    b.HasIndex("AppointmentPlaceID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("TransactionHistoryID");

                    b.ToTable("BillingDetails");
                });

            modelBuilder.Entity("Core.Entities.Cart", b =>
                {
                    b.Property<long>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CartID"));

                    b.Property<long?>("BillingDetailsReceiptID")
                        .HasColumnType("bigint");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("CartID");

                    b.HasIndex("BillingDetailsReceiptID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Core.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactNumber")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SystemUserID")
                        .HasColumnType("bigint");

                    b.HasKey("CustomerID");

                    b.HasIndex("SystemUserID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.Property<long>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductID"));

                    b.Property<long?>("CartID")
                        .HasColumnType("bigint");

                    b.Property<string>("FreeText1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeText2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeText3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeText4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long?>("ProductCategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductID");

                    b.HasIndex("CartID");

                    b.HasIndex("ProductCategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Core.Entities.ProductCategory", b =>
                {
                    b.Property<long>("ProductCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductCategoryID"));

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryID");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Core.Entities.SystemUser", b =>
                {
                    b.Property<long>("SystemUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SystemUserID"));

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("isCustomer")
                        .HasColumnType("bit");

                    b.HasKey("SystemUserID");

                    b.ToTable("SystemUsers");
                });

            modelBuilder.Entity("Core.Entities.TransactionHistory", b =>
                {
                    b.Property<long>("TransactionHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TransactionHistoryID"));

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionHistoryID");

                    b.HasIndex("CustomerID");

                    b.ToTable("TransactionHistory");
                });

            modelBuilder.Entity("Core.Entities.BillingDetails", b =>
                {
                    b.HasOne("Core.Entities.AppointmentPlace", "AppointmentPlace")
                        .WithMany()
                        .HasForeignKey("AppointmentPlaceID");

                    b.HasOne("Core.Entities.Customer", "Customer")
                        .WithMany("BillingDetails")
                        .HasForeignKey("CustomerID");

                    b.HasOne("Core.Entities.TransactionHistory", null)
                        .WithMany("BillingDetails")
                        .HasForeignKey("TransactionHistoryID");

                    b.Navigation("AppointmentPlace");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Core.Entities.Cart", b =>
                {
                    b.HasOne("Core.Entities.BillingDetails", null)
                        .WithMany("Carts")
                        .HasForeignKey("BillingDetailsReceiptID");

                    b.HasOne("Core.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Core.Entities.Customer", b =>
                {
                    b.HasOne("Core.Entities.SystemUser", "SystemUser")
                        .WithMany()
                        .HasForeignKey("SystemUserID");

                    b.Navigation("SystemUser");
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.HasOne("Core.Entities.Cart", null)
                        .WithMany("Products")
                        .HasForeignKey("CartID");

                    b.HasOne("Core.Entities.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryID");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Core.Entities.TransactionHistory", b =>
                {
                    b.HasOne("Core.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Core.Entities.BillingDetails", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("Core.Entities.Cart", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Core.Entities.Customer", b =>
                {
                    b.Navigation("BillingDetails");
                });

            modelBuilder.Entity("Core.Entities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Core.Entities.TransactionHistory", b =>
                {
                    b.Navigation("BillingDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
